#!/bin/bash

config=.lambda-config
default_region=us-east-1
usage="\nusage: update_lambda [-n <name>] [-r <region>] [<files>...]\n"

while getopts ':n:r:' opt ; do
    case $opt in
        n) name=$OPTARG ;;
        r) region=$OPTARG ;;
    esac
done
shift $(( OPTIND -1 ))

if [ ! -d "$config" ] ; then
    mkdir $config
fi

if [ -z "$region" ] ; then
    if [ -f "$config/region" ] ; then
        region=`cat $config/region`
    else
        printf "No region provided or configured, using default region: $default_region\n"
        region=$default_region
    fi
else
    echo "$region" > "$config/region"
fi
if [ -z "$name" ] ; then
    if [ -f "$config/name" ] ; then
        name=`cat $config/name`
    else
        printf "No name provided or configured.$usage"
        exit 1
    fi
else
    if ! aws lambda get-function --function-name $name --region $region &>/dev/null ; then
        printf "Could not find function named $name in $region.\n"
        exit 1
    fi
    echo "$name" > "$config/name"
fi
if [ $# -gt 0 ] ; then
    files=$@
    for file in $files ; do
        if [ ! -f $file ] ; then
            printf "$file doesn't exist.\n"
            exit 1
        fi
    done
    echo "${files[*]}" > "$config/files"
else
    if [ -f "$config/files" ] ; then
        read -a files <<< `cat $config/files`
    else
        printf "No files provided or configured.$usage"
    fi
fi

npm prune --production
# npm uninstall --no-save aws-sdk
zip lambda ${files[@]}
zip -r lambda node_modules
aws lambda update-function-code --function-name $name --zip-file fileb://lambda.zip --region $region
npm install
